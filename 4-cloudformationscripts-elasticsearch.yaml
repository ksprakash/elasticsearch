AWSTemplateFormatVersion: 2010-09-09
Description: These template automatically install elasticsearch and kibana with default configurations

Parameters:
  KeyName:
    Type: AWS::EC2::KeyPair::KeyName

  Environment:
    Type: String
    Default: dev
  
  CompanyName:
    Type: String
    Default: AccountantsWorld 
Resources:
  VMInstance:
    Type: AWS::EC2::Instance
    CreationPolicy:
      ResourceSignal:
        Timeout: PT5M       
    Metadata:
      Comment: Deploy a  Elasticsearch and Kibana with file configurations
      AWS::CloudFormation::Init:
        configSets:
            elasticstackconfig:
               - installAndStart
            dualstackconfig:
               - ConfigSet: elasticstackconfig
               - configfiles

            default:
               - ConfigSet: dualstackconfig 
        
        installAndStart:
          commands: 
              es1:
                command: "wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-7.7.0-x86_64.rpm"
                cwd:  "/tmp"
              es2:
                command: "wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-7.7.0-x86_64.rpm.sha512"
                cwd: "/tmp"
              es3: 
                command: "shasum -a 512 -c elasticsearch-7.7.0-x86_64.rpm.sha512"
                cwd: "/tmp"
              es4:
                command: "sudo rpm --install elasticsearch-7.7.0-x86_64.rpm"
                cwd: "/tmp"
              kb1:
                command: "wget https://artifacts.elastic.co/downloads/kibana/kibana-7.7.0-x86_64.rpm"
                cwd:  "/tmp"
              kb2:
                command: "sudo rpm --install kibana-7.7.0-x86_64.rpm"
                cwd: "/tmp"
              rmjvm:
                command: "sudo yum -y erase java-1.7.0-openjdk.x86_64"
                cwd: "~"

          
        configfiles:
          packages:
            epel: "http://download.fedoraproject.org/pub/epel/5/i386/epel-release-5-4.noarch.rpm"
            yum:
              java-1.8.0-openjdk.x86_64: []
              java-1.8.0-openjdk-devel: []
          files:
            "/etc/cfn/cfn-hup.conf":
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
                interval=3
              mode: "000400"
              owner: "root"
              group: "root"
            "/etc/cfn/hooks.d/cfn-auto-reloader.conf":  
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.VMInstance.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource VMInstance --region ${AWS::Region}
              mode: "000400"
              owner: "root"
              group: "root"                       
    Properties:
      ImageId: ami-0915e09cc7ceee3ab
      InstanceType: t2.medium
      KeyName: !Ref KeyName
      NetworkInterfaces: 
         - AssociatePublicIpAddress: true
           DeviceIndex: "0"
           GroupSet: 
              - sg-03a6f44785f0205db
           SubnetId: 
                subnet-02633b1c6ecddf1d1
      UserData:
        "Fn::Base64": 
          !Sub |
            #!/bin/bash -xe
            # Get latest CloudFormation package - These packages change frequently
            yum update -y aws-cfn-bootstrap
            # Start cfn-init to Install all Metadata content (pacakges, sources, files, commands and services )
            /opt/aws/bin/cfn-init -s ${AWS::StackId} -r VMInstance --region ${AWS::Region} || error_exit 'Failed to run cfn-init'
            # Signal the status from cfn-init 
            /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackId} --resource VMInstance --region ${AWS::Region}
            # Start cfn-hup daemon so that it will keep listening to any changes to EC2 Instance Metadata. 
            /opt/aws/bin/cfn-hup || error_exit 'Failed to start cfn-hup'
      Tags:
       - Key: Name
         Value: !Sub ${Environment}-${CompanyName}-Elasticsearch


  DataVolume:
   DependsOn: VMInstance
   Type: AWS::EC2::Volume
   Properties:
    Size: 50
    AvailabilityZone: !GetAtt VMInstance.AvailabilityZone
    Tags:
      - Key: Name
        Value: !Sub ${Environment}-${CompanyName}-Volume
  MountPoint:
    DependsOn: DataVolume
    Type: AWS::EC2::VolumeAttachment
    Properties:
      InstanceId: !Ref VMInstance
      VolumeId: !Ref DataVolume
      Device: /dev/sdb

Outputs:
  ElasticsearchURL:
    Description: Elastic App URL to access
    Value: !Sub http://${VMInstance.PublicDnsName}:9200 

  KibanaURL:
    Description: Kibana App URL to access
    Value: !Sub http://${VMInstance.PublicDnsName}:5601 



